<?php

/**
 * @file stripe.module
 * Drupal hooks used for integrating the Stripe service.
 */

/**
 * Implements hook_help().
 */
function stripe_help($path, $arg) {
  if ($path == 'admin/config/stripe/keys') {
    $output = '<ol>';
    $output .= '<li>' . t('Enter the API keys you get from your <a href="@url">Stripe account page</a>.', array('@url' => 'https://manage.stripe.com/account')) . '</li>';
    $output .= '<li>' . t('Use the radio buttons to choose which API Key should be used with this site.') . '</li>';
    $output .= '<li>' . t('After designating an API Key, you might want to try out <a href="@url">the test form</a>.', array('@url' => '/admin/config/stripe/test')) . '</li>';
    $output .= '</ol>';
    return $output;
  }
  if ($path == 'admin/config/stripe/test') {
    return '<p>' . t('This form is to test responses from Stripe. The default values are accepted by Stripe for testing purposes. Before you can use this form, you should <a href="@url">designate an active API Key</a>.', array('@url' => '/admin/config/stripe/keys')) . '</p>';
  }
}

/**
 * Implements hook_permission().
 */
function stripe_permission() {
  return array(
    'administer stripe' => array(
      'title' => t('Administer the Stripe module'),
      'description' => t('Allows access to configure API Keys and to the test form.'),
    ),
  );
}

/**
 * Implements hook_theme().

function stripe_theme() {

}

/**
 * Implements hook_menu().
 */
function stripe_menu() {
  $items['admin/config/stripe/keys'] = array(
    'title' => 'API Keys',
    'description' => 'Enter API Keys and set which one should be active.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stripe_admin_keys'),
    'access arguments' => array('administer stripe'),
    'file' => 'stripe.admin.inc',
  );

  $items['admin/config/stripe/test'] = array(
    'title' => 'Test form',
    'description' => 'A form for testing Stripe responses.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stripe_admin_test'),
    'access arguments' => array('administer stripe'),
    'file' => 'stripe.admin.inc',
  );

  return $items;
}


/**
 * Implements hook_requirements().
 */
function stripe_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    $requirements['stripe'] = _stripe_requirement_check();
  }
  return $requirements;
}

function _stripe_requirement_check() {
  $t = get_t();
  if (file_exists('sites/all/libraries/stripe/lib/Stripe.php')) {
    return array(
      'title' => $t('Stripe Payment API PHP Library'), 
      'value' => $t('Stripe PHP Library is in place. Version @version', array('@version' => file_get_contents('sites/all/libraries/stripe/VERSION'))), 
      'severity' => REQUIREMENT_OK,
    );
  }
  else {
    return array(
      'title' => $t('Stripe Payment API PHP Library'), 
      'value' => $t('The Stripe PHP Library is not in place. <a href="https://github.com/stripe/stripe-php/zipball/master">Download the and unzip the library</a> then place the contents of that directory in sites/all/libraries/stripe'), 
      'severity' => REQUIREMENT_ERROR,
    );
  }
}